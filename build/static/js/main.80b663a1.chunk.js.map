{"version":3,"sources":["fonts/DigitalNumbers-Regular.ttf","api/endpoints.js","components/RegistroPartido.jsx","components/reloj.jsx","components/contador.jsx","components/Scoreboard.jsx","components/Marcador.jsx","Paths.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","console","log","process","serverAccess","concat","serverUrl","RegistroPartidoForm","socket","setSocket","useState","pareja1Jugador1","setPareja1Jugador1","pareja1Jugador2","setPareja1Jugador2","pareja2Jugador1","setPareja2Jugador1","pareja2Jugador2","setPareja2Jugador2","numSets","setNumSets","saqueRandom","setSaqueRandom","puntoOro","setPuntoOro","showRegisterModal","setShowRegisterModal","showAlertModal","setShowAlertModal","showLastModal","setShowLastModal","closeRegisterModal","async","response","fetch","ok","Error","json","error","finishMatch","status","openLastModal","closeAlertModal","closeLastModal","window","location","reload","useEffect","newSocket","WebSocket","onopen","onmessage","event","msg_type","content","JSON","parse","data","onclose","close","React","createElement","className","Modal","show","onHide","backdrop","centered","Header","Title","Body","Footer","Button","variant","onClick","closeButton","onSubmit","e","preventDefault","getMatch","match","method","headers","Content-Type","body","stringify","registerMatch","htmlFor","type","id","value","onChange","target","required","checked","Timer","currentTime","setCurrentTime","Date","intervalID","setInterval","clearInterval","date","toLocaleTimeString","hour","minute","formatTime","timeElapsed","setTimeElapsed","prevTime","Fragment","seconds","hours","Math","floor","minutes","lastSeconds","toString","padStart","ScoreBoard","matchData","setMatchData","servePareja1Jugador1","setServePareja1Jugador1","servePareja1Jugador2","setServePareja1Jugador2","servePareja2Jugador1","setServePareja2Jugador1","servePareja2Jugador2","setServePareja2Jugador2","setsDataPareja1","setSetsDataPareja1","setsDataPareja2","setSetsDataPareja2","point_pareja1","setPointPareja1","point_pareja2","setPointPareja2","msg","setMsg","timer","setTimeout","clearTimeout","puntaje_pareja_1","puntaje_pareja_2","set","points","prevData","newData","games","pareja","jugador","setNumbers","Array","from","length","_","index","size","aria-labelledby","src","alt","Clock","colSpan","map","key","role","aria-label","rowSpan","Scoreboard","Paths","Router","Routes","Route","exact","path","element","Navigate","to","App","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.80b663a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DigitalNumbers-Regular.df8665d3.ttf\";","const serverAddress = process.env.REACT_APP_LOCAL_IP ;\nconsole.log(serverAddress);\nconst serverPort = '8000';\nconst serverAccess = `${serverAddress}:${serverPort}`\nconst serverUrl = `http://${serverAccess}`;\n\nasync function getMatch() {\n    try {\n        const response = await fetch(`${serverUrl}/obtener_partido`);\n        if (!response.ok) {\n            throw new Error('Error al obtener los datos del partido');\n        }\n        return response.json();\n    } catch (error) {\n        console.error('Error al obtener los datos del partido:', error);\n    }\n};\n\n\nasync function finishMatch() {\n    try {\n        const response = await fetch(`${serverUrl}/finalizar_partido`);\n        if (!response.ok) {\n            throw new Error('Error al obtener los datos del partido');\n        }\n        return response.json();\n    } catch (error) {\n        console.error('Error al finalizar el partido:', error);\n    }\n};\n\nasync function registerMatch(data) {\n    try {\n        const response = await fetch(`${serverUrl}/registro_partido`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        return response;\n    } catch (error) {\n        console.error('Error al enviar los datos:', error);\n    }\n}\n\nexport {getMatch, finishMatch, registerMatch, serverAccess};","import React, { useState, useEffect } from 'react';\nimport {Button, Modal} from 'react-bootstrap';\nimport { serverAccess } from '../api/endpoints';\nimport { getMatch, finishMatch, registerMatch } from '../api/endpoints';\n\n\nconst RegistroPartidoForm = () => {\n  const [socket, setSocket] = useState(null);\n  const [pareja1Jugador1, setPareja1Jugador1] = useState('');\n  const [pareja1Jugador2, setPareja1Jugador2] = useState('');\n  const [pareja2Jugador1, setPareja2Jugador1] = useState('');\n  const [pareja2Jugador2, setPareja2Jugador2] = useState('');\n  const [numSets, setNumSets] = useState('3');\n  const [saqueRandom, setSaqueRandom] = useState(false);\n  const [puntoOro, setPuntoOro] = useState(false);\n  const [showRegisterModal, setShowRegisterModal] = useState(false);\n  const [showAlertModal, setShowAlertModal] = useState(false);\n  const [showLastModal, setShowLastModal] = useState(false);\n\n  const openRegisterModal = () => setShowRegisterModal(true);\n  const closeRegisterModal = async () => \n  {\n    setShowRegisterModal(false);\n    try {\n      const response = await finishMatch();\n      console.log(response);\n      if(response.status === 'ok'){\n        openLastModal();\n      }\n    } catch {\n      console.log('se produjo un error al finalizar el partido');\n    }\n  }\n\n\n  const openAlertModal = () => setShowAlertModal(true);\n  const closeAlertModal = () => setShowAlertModal(false);\n  \n  const openLastModal = () => setShowLastModal(true);\n\n  const closeLastModal = () => {\n    setShowLastModal(false);\n    window.location.reload();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const match = await getMatch();\n    \n    if(match.match) {\n      openAlertModal();\n      return;\n    }\n\n    const data = {\n      pareja1Jugador1,\n      pareja1Jugador2,\n      pareja2Jugador1,\n      pareja2Jugador2,\n      numSets\n    };\n\n    try {\n      const response = await registerMatch(data);\n      if (response.ok) {\n        openRegisterModal();\n      } else {\n        console.log('error al registrar partido');\n      }\n    } catch (error) {\n      console.error('Error al enviar los datos:', error);\n    }\n  };\n\n  useEffect(() => {\n    const newSocket = new WebSocket(`ws://${serverAccess}/ws`);\n\n    // Manejar eventos WebSocket\n    newSocket.onopen = () => {\n        console.log('Conectado al servidor WebSocket');\n    };\n\n    newSocket.onmessage = (event) => {\n      const {msg_type, content} = JSON.parse(event.data);\n\n      if(msg_type === 'info'){\n          setShowRegisterModal(false);\n          setShowLastModal(true);\n      } \n\n    };\n\n    newSocket.onclose = () => {\n        console.log('Desconectado del servidor WebSocket');\n    };\n\n    // Almacenar el WebSocket en el estado del componente\n    setSocket(newSocket);\n\n    // Devolver una función de limpieza para cerrar la conexión WebSocket cuando el componente se desmonte\n    return () => {\n        if (socket) {\n            socket.close();\n        }\n    };\n    \n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container mt-5\">\n      <Modal show={showRegisterModal} onHide={closeRegisterModal} backdrop=\"static\" centered>\n        <Modal.Header className=\"justify-content-center\">\n          <Modal.Title><h2>Registro de Partido Exitoso!</h2></Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <h4>\n            A continuacion podras finalizar el partido una vez termines de jugar\n          </h4>\n\n        </Modal.Body>\n        <Modal.Footer className=\"justify-content-center\">\n          <Button variant=\"warning\" onClick={closeRegisterModal}>\n            Finalizar Partido\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal show={showAlertModal} onHide={closeAlertModal} centered>\n        <Modal.Header closeButton>\n          <Modal.Title><h2>Partido en curso!</h2></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>\n            Ya hay un partido en curso, por favor espera a que finalice...\n          </h4>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeAlertModal} centered>\n            Aceptar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal show={showLastModal} onHide={closeLastModal} backdrop=\"static\" centered>\n        <Modal.Header closeButton>\n          <Modal.Title><h2>Partido Finalizado...!</h2></Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>\n            Gracias por visitarnos!\n          </h4>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"success\" onClick={closeLastModal} centered>\n            Aceptar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <h1 className=\"mb-4\">Registro tu Partido de Pádel</h1>\n      \n      {/* Sección para la primera pareja */}\n      <form onSubmit={handleSubmit}>\n        <div className='container'>\n          <h3>Pareja 1</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"jugador1_p1\">Nombre del Jugador 1:</label>\n            <input type=\"text\" className=\"form-control\" id=\"jugador1_p1\" value={pareja1Jugador1} onChange={(e) => setPareja1Jugador1(e.target.value)} required />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"jugador2_p1\">Nombre del Jugador 2:</label>\n            <input type=\"text\" className=\"form-control\" id=\"jugador2_p1\" value={pareja1Jugador2} onChange={(e) => setPareja1Jugador2(e.target.value)} required />\n          </div>\n        </div>\n        <br />\n\n        <div className='container'>\n          <h3>Pareja 2</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"jugador1_p2\">Nombre del Jugador 1:</label>\n            <input type=\"text\" className=\"form-control\" id=\"jugador1_p2\" value={pareja2Jugador1} onChange={(e) => setPareja2Jugador1(e.target.value)} required />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"jugador2_p2\">Nombre del Jugador 2:</label>\n            <input type=\"text\" className=\"form-control\" id=\"jugador2_p2\" value={pareja2Jugador2} onChange={(e) => setPareja2Jugador2(e.target.value)} required />\n          </div>\n        </div>\n\n        <br></br>\n\n        <div className='container'>\n          <h3>Configuracion del juego</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"sets\">Cantidad de Sets:</label>\n            <select className=\"form-control\" id=\"sets\" value={numSets} onChange={(e) => setNumSets(e.target.value)}>\n              <option value=\"3\">3 sets</option>\n              <option value=\"5\">5 sets</option>\n            </select>\n          </div>\n          <div className=\"form-group form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" id=\"saque_random\" checked={saqueRandom} onChange={() => setSaqueRandom(!saqueRandom)} />\n            <label className=\"form-check-label\" htmlFor=\"saque_random\">Saque al azar</label>\n          </div>\n          <div className=\"form-group form-check\">\n            <input type=\"checkbox\" className=\"form-check-input\" id=\"punto_oro\" checked={puntoOro} onChange={() => setPuntoOro(!puntoOro)} />\n            <label className=\"form-check-label\" htmlFor=\"punto_oro\">Jugar con ventaja?</label>\n          </div>\n          <br></br>\n          <button type=\"submit\" className=\"btn btn-primary\">Guardar</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegistroPartidoForm;\n","import React, { useState, useEffect } from 'react';\n\nconst Timer = () => {\n    const [currentTime, setCurrentTime] = useState(new Date());\n\n    useEffect(() => {\n        const intervalID = setInterval(() => {\n            setCurrentTime(new Date());\n        }, 1000);\n\n        return () => clearInterval(intervalID);\n    }, []);\n\n    const formatTime = (date) => {\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    }\n\n    return (\n        <p>{formatTime(currentTime)}</p>\n    );\n}\n\nexport default Timer;\n","import React, { useState, useEffect } from 'react';\n\nconst Timer = () => {\n    const [timeElapsed, setTimeElapsed] = useState(0);\n\n    useEffect(() => {\n        const intervalID = setInterval(() => {\n            setTimeElapsed(prevTime => prevTime + 1);\n        }, 1000);\n\n        return () => clearInterval(intervalID);\n    }, []);\n\n    const formatTime = (seconds) => {\n        const hours = Math.floor(seconds / 3600);\n        const minutes = Math.floor((seconds % 3600) / 60);\n        const lastSeconds = seconds % 60;\n\n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${lastSeconds.toString().padStart(2, '0')}`;\n    }\n\n    return (\n            <>{formatTime(timeElapsed)}</>\n    );\n}\n\nexport default Timer;\n","import React, { useEffect, useState } from 'react';\nimport { Modal} from 'react-bootstrap';\nimport { serverAccess } from '../api/endpoints';\nimport '../fonts/DigitalNumbers-Regular.ttf';\nimport '../marcador.css';\nimport Clock from './reloj';\nimport Timer from './contador';\n\n\nconst ScoreBoard = () => {\n  const [socket, setSocket] = useState(null);\n  const [matchData, setMatchData] = useState(null);\n  const [servePareja1Jugador1, setServePareja1Jugador1] = useState(null);\n  const [servePareja1Jugador2, setServePareja1Jugador2] = useState(null);\n  const [servePareja2Jugador1, setServePareja2Jugador1] = useState(null);\n  const [servePareja2Jugador2, setServePareja2Jugador2] = useState(null);\n  const [setsDataPareja1, setSetsDataPareja1] = useState([]);\n  const [setsDataPareja2, setSetsDataPareja2] = useState([]);\n  const [point_pareja1, setPointPareja1] = useState(0);\n  const [point_pareja2, setPointPareja2] = useState(0);\n\n  const [msg, setMsg] = useState(\"\");\n  const [showAlertModal, setShowAlertModal] = useState(false);\n\n  const openAlertModal = () => setShowAlertModal(true);\n  const closeAlertModal = () => {\n    const timer = setTimeout(() => {\n      setShowAlertModal(false);\n    }, 60000); // 1 minuto en milisegundos   \n    window.location.reload();   \n    return () => clearTimeout(timer);\n    \n  }\n\n  \n  useEffect(() => {\n    const newSocket = new WebSocket(`ws://${serverAccess}/ws`);\n\n    // Manejar eventos WebSocket\n    newSocket.onopen = () => {\n        console.log('Conectado al servidor WebSocket');\n    };\n\n    newSocket.onmessage = (event) => {\n        const {msg_type, content} = JSON.parse(event.data);\n\n        if(msg_type === 'match'){\n            setMatchData(content);\n        }\n        \n        if (msg_type === 'score') {\n          if(content !== null){\n            const { puntaje_pareja_1, puntaje_pareja_2, set  } = content;\n            //const { points, games, sets } = puntaje_pareja_1;\n            const points = puntaje_pareja_1.points;\n            // Actualiza solo el set correspondiente en el estado\n            if (set && puntaje_pareja_1 && puntaje_pareja_2) {\n              setSetsDataPareja1(prevData => {\n                const newData = [...prevData];\n                newData[set - 1] = puntaje_pareja_1.games;\n                return newData;\n              });\n    \n              setSetsDataPareja2(prevData => {\n                const newData = [...prevData];\n                newData[set - 1] = puntaje_pareja_2.games;\n                return newData;\n              });\n            }        \n            setPointPareja1(points);\n            setPointPareja2(puntaje_pareja_2['points']);\n          } \n        }\n\n        if(msg_type === 'info'){\n          const { msg } = content;\n          console.log(showAlertModal);\n          console.log(msg);\n          setMsg(msg);\n          openAlertModal();\n          setShowAlertModal(true);\n          setSetsDataPareja1([]);\n          setSetsDataPareja2([]);\n          newSocket.close();\n          \n          // Cerrar el modal después de 1 minuto\n          const timer = setTimeout(() => {\n            closeAlertModal();\n          }, 60000);\n          return () => clearTimeout(timer);\n          \n          }   \n\n        if(msg_type === 'serve'){\n          const { pareja, jugador} = content; \n          if(pareja === 1){\n            if(jugador === 1){\n              setServePareja1Jugador1(true);\n              setServePareja1Jugador2(false);\n              setServePareja2Jugador1(false);\n              setServePareja1Jugador2(false);\n            }else{\n              setServePareja1Jugador2(true);\n              setServePareja1Jugador1(false);\n              setServePareja2Jugador1(false);\n              setServePareja2Jugador2(false);\n            }\n          }else{\n            if(jugador === 1){\n              setServePareja2Jugador1(true);\n              setServePareja1Jugador2(false);\n              setServePareja1Jugador1(false);\n              setServePareja2Jugador2(false);\n            }else{\n              setServePareja2Jugador2(true);\n              setServePareja1Jugador2(false);\n              setServePareja2Jugador1(false);\n              setServePareja1Jugador2(false);\n            }\n          }\n\n        }\n\n        if(msg_type === 'serve'){\n          const { pareja, jugador} = content; \n          if(pareja === 1){\n            if(jugador === 1){\n              setServePareja1Jugador1(true);\n              setServePareja1Jugador2(false);\n              setServePareja2Jugador1(false);\n              setServePareja1Jugador2(false);\n            }else{\n              setServePareja1Jugador2(true);\n              setServePareja1Jugador1(false);\n              setServePareja2Jugador1(false);\n              setServePareja2Jugador2(false);\n            }\n          }else{\n            if(jugador === 1){\n              setServePareja2Jugador1(true);\n              setServePareja1Jugador2(false);\n              setServePareja1Jugador1(false);\n              setServePareja2Jugador2(false);\n            }else{\n              setServePareja2Jugador2(true);\n              setServePareja1Jugador2(false);\n              setServePareja2Jugador1(false);\n              setServePareja1Jugador2(false);\n            }\n          }\n\n        }\n    };\n\n    newSocket.onclose = () => {\n        console.log('Desconectado del servidor WebSocket');\n    };\n\n    // Almacenar el WebSocket en el estado del componente\n    setSocket(newSocket);\n\n    // Devolver una función de limpieza para cerrar la conexión WebSocket cuando el componente se desmonte\n    return () => {\n        if (socket) {\n            socket.close();\n        }\n    };\n    \n    // eslint-disable-next-line\n  }, []);\n\n  if (!matchData) {\n    return <h1>Esperando Partido...</h1>;\n  }\n\n\n  const { pareja1Jugador1, pareja1Jugador2, pareja2Jugador1, pareja2Jugador2, numSets } = matchData;\n  // Genera un array de números hasta el número de sets\n  const setNumbers = Array.from({ length: numSets }, (_, index) => index + 1);\n\n  return (\n      \n    \n    <div className=\"contenedor\">\n      <div className='container mt-5 modal'>\n\n      <Modal\n      \n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={showAlertModal} \n      onHide={closeAlertModal} \n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n        <h1>Se termino el Partido!</h1>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n         <h2>\n            <p>{`${msg}`}</p>\n          </h2>\n      </Modal.Body>\n      <Modal.Footer>\n      </Modal.Footer>\n    </Modal>  \n      \n      </div>\n    <div className=\"row\">\n      <div className='row'>\n        <div className=\"col-md-2\">\n        <img src={process.env.PUBLIC_URL + \"/logo_padel_center.jpeg\"} alt=\"logo\" className=\"style_img_left\" /> \n        </div>\n        <div className='col-md-8'>        \n          <div className=\"time-container\">\n            <Clock />           \n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row\">\n  </div>\n    <table className=\"scoreboard\">\n    <thead>\n      <tr className=\"td-titulo\">\n        <th colSpan=\"2\" className=\"botton-back bottom-align\">Match Time <div className=\"time-container bottom-text\"><Timer /></div></th>\n        <th colSpan=\"1\" className=\"bottom-align\">Games</th>\n        {setNumbers.map(set => (\n            <th key={set} className=\"bottom-align\">{`Set ${set}`}</th>\n          ))}\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td className=\"no-border text_align_left\">\n        {servePareja1Jugador1 === true && (\n                <span role=\"img\" aria-label=\"otro_icono\" className='text_align_left'>\n                  <img src={process.env.PUBLIC_URL + \"/ball_tennis_icon.png\"} alt=\"pelota\" />\n                </span>\n              )}\n        {servePareja1Jugador1 !== true && (\n            <div className=\"circle\"></div>\n        )}\n          \n        </td>\n        <td className=\"nombre\">{`${pareja1Jugador1}`}</td>\n        <td rowSpan=\"2\" className=\"large_size recuadro_games letra_number\" id='pareja1_game'>{`${point_pareja1}`}</td>\n        {setNumbers.map(set => (\n            <td key={set} id={set} rowSpan=\"2\" className=\"large_size letra_number\">{setsDataPareja1[set - 1]}</td>\n          ))}\n      </tr>\n      <tr>\n        <td className=\"borde_nombre text_align_left\" >\n        {servePareja1Jugador2 === true && (\n                <span role=\"img\" aria-label=\"otro_icono\">\n                  <img src={process.env.PUBLIC_URL + \"/ball_tennis_icon.png\"} alt=\"pelota\" />\n                </span>\n              )}\n        {servePareja1Jugador2 !== true && (\n            <div className=\"circle\"></div>\n        )}\n        </td>\n        <td className=\"borde_nombre nombre\">{`${pareja1Jugador2}`}</td>\n      </tr>\n      <tr>\n        <td className=\"no-border text_align_left\" >\n        {servePareja2Jugador1 === true && (\n                <span role=\"img\" aria-label=\"otro_icono\" className='text_align_left'>\n                  <img src={process.env.PUBLIC_URL + \"/ball_tennis_icon.png\"} alt=\"pelota\" />\n                </span>\n              )}\n        {servePareja2Jugador1 !== true && (\n            <div className=\"circle\"></div>\n        )}\n        </td>\n        <td className=\"nombre\">{`${pareja2Jugador1}`}</td>\n        <td rowSpan=\"2\" className=\"large_size recuadro_games letra_number\" id='pareja2_game'>{`${point_pareja2}`}</td>\n        {setNumbers.map(set => (\n            <td key={set} rowSpan=\"2\" className=\"large_size letra_number\">{setsDataPareja2[set - 1]}</td>\n          ))}\n      </tr>\n      <tr>\n       <td className='text_align_left'>{servePareja2Jugador2 === true && (\n                <span role=\"img\" aria-label=\"otro_icono\" >\n                  <img src={process.env.PUBLIC_URL + \"/ball_tennis_icon.png\"} alt=\"pelota\" />\n                </span>\n              )}\n        {servePareja2Jugador2 !== true && (\n            <div className=\"circle\"></div>\n        )}</td>\n        <td className=\"nombre\">{`${pareja2Jugador2}`}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n    \n  );\n};\n\nexport default ScoreBoard;\n","import React from 'react';\nimport '../fonts/DigitalNumbers-Regular.ttf';\nimport '../marcador.css';\nimport Clock from './reloj';\nimport Timer from './contador';\n\n\n\n\n\n// Componente principal que maneja el marcador completo del partido padel-table\nconst Scoreboard = () => {\n  return (    \n    <div className=\"contenedor\">\n      <div className=\"row\">\n        <div>\n          <div className=\"time-container\"><Clock /></div>\n\n        </div>\n      </div>\n      <table className=\"scoreboard\">\n      <thead>\n        <tr className=\"td-titulo\">\n          <th colSpan=\"2\" className=\"botton-back bottom-align\">Match Time <div className=\"time-container bottom-text\"><Timer /></div></th>\n          <th colSpan=\"1\" className=\"bottom-align\">Games</th>\n          <th className=\"bottom-align\">set 1</th>\n          <th className=\"bottom-align\">set 2</th>\n          <th className=\"bottom-align\">set 3</th>\n          <th className=\"bottom-align\">set 4</th>\n          <th className=\"bottom-align\">set 5</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td className=\"no-border \" ><div className=\"circle\"></div></td>\n          <td className=\"nombre\">Juan David</td>\n          <td rowSpan=\"2\" className=\"large_size recuadro_games letra_number\">30</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">6</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">4</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">0</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">0</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">-</td>\n        </tr>\n        <tr>\n          <td className=\"borde_nombre\"><div className=\"circle\"></div></td>\n          <td className=\"borde_nombre nombre\">Luis Felipe</td>\n        </tr>\n        <tr>\n          <td className=\"no-border\" ><div className=\"circle\"></div></td>\n          <td className=\"nombre\">Sebastian</td>\n          <td rowSpan=\"2\" className=\"large_size recuadro_games letra_number\">15</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">3</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">2</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">0</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">0</td>\n          <td rowSpan=\"2\" className=\"large_size letra_number\">-</td>\n        </tr>\n        <tr>\n         <td><span role=\"img\" aria-label=\"pelota\"><img src={process.env.PUBLIC_URL + \"/ball_tennis_icon.png\"} alt=\"Emoticon\" /></span></td>\n          <td className=\"nombre\">Harold</td>\n        </tr>\n      </tbody>\n    </table>\n    <div className=\"row\">\n      <img src={process.env.PUBLIC_URL + \"/logo_padel_center.jpeg\"} alt=\"logo\" className=\"style_img\" />    \n    </div>\n</div>\n  );\n};\n\nexport default Scoreboard;\n","import React from 'react';\n\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport RegistroPartidoForm from './components/RegistroPartido';\nimport ScoreBoard from './components/Scoreboard';\nimport Scoreboard from './components/Marcador';\n\nconst Paths = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/registro_partido\" element={<RegistroPartidoForm/>} />\n        <Route exact path=\"/scoreboard\" element={<ScoreBoard/>} />\n        <Route exact path=\"/\" element={<Navigate to=\"/scoreboard\" />} />\n        <Route exact path=\"/marcador\" element={<Scoreboard/>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default Paths;\n","import React from 'react';\nimport Paths from './Paths';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => {\n  return (\n    <div>\n      <Paths />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}